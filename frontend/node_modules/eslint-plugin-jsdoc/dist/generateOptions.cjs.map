{"version":3,"file":"generateOptions.cjs","names":["_escodegen","require","_decamelize","_interopRequireDefault","_espree","_esquery","_promises","_path","e","__esModule","default","rulesDir","dirContents","readdir","file","endsWith","fileContents","readFile","join","ast","parse","ecmaVersion","sourceType","results","esquery","query","value","schema","generate","json","eval","parsed","JSON","initial","Array","isArray","length","console","log","type","enum","map","item","shift","obj","hyphenatedRule","decamelize","separator","replace","docPath","ruleDocs","Object","keys","properties","key","writeFile"],"sources":["../src/bin/generateOptions.js"],"sourcesContent":["import {\n  generate,\n} from '@es-joy/escodegen';\nimport decamelize from 'decamelize';\nimport {\n  parse,\n} from 'espree';\nimport esquery from 'esquery';\nimport {\n  readdir,\n  readFile,\n  writeFile,\n} from 'fs/promises';\nimport {\n  join,\n} from 'path';\n\nconst rulesDir = './src/rules';\n\nconst dirContents = await readdir(rulesDir);\n\nfor (const file of dirContents) {\n  if (!file.endsWith('.js')) {\n    continue;\n  }\n\n  const fileContents = await readFile(join(rulesDir, file), 'utf8');\n  // console.log('file', file);\n  const ast = parse(fileContents, {\n    ecmaVersion: 2_024,\n    sourceType: 'module',\n  });\n  const results = esquery.query(\n    ast,\n    'ExportDefaultDeclaration[declaration.callee.name=\"iterateJsdoc\"]' +\n     ' Property[key.name=\"meta\"] Property[key.name=\"schema\"]',\n  );\n  if (results[0]?.value) {\n    const schema = generate(results[0]?.value);\n\n    // eslint-disable-next-line no-eval -- Need some parser\n    const json = eval('JSON.stringify(' + schema + ', null, 2)');\n    const parsed = JSON.parse(json);\n\n    let initial = '';\n    if (Array.isArray(parsed)) {\n      if (!parsed.length) {\n        // eslint-disable-next-line no-console -- CLI\n        console.log('skipping no options', file);\n        continue;\n      }\n\n      if (parsed.length >= 2) {\n        if (parsed.length >= 3 || parsed[0].type !== 'string') {\n          // eslint-disable-next-line no-console -- CLI\n          console.log('unexpectedly large schema', file);\n          continue;\n          // throw new Error('Unexpected long schema array');\n        }\n\n        initial = `string (${parsed[0].enum.map((item) => {\n          return `\"${item}\"`;\n        }).join(', ')}) followed by object with `;\n        parsed.shift();\n      }\n    }\n\n    const obj = Array.isArray(parsed) ? parsed[0] : parsed;\n\n    const hyphenatedRule = decamelize(file, {\n      separator: '-',\n    }).replace(/\\.js$/v, '.md');\n    const docPath = join('.README/rules', hyphenatedRule);\n\n    const ruleDocs = (await readFile(docPath, 'utf8'))\n      .replace(/(\\|\\s*Options\\s*\\|)([^\\|]*)(\\|)?/v, `$1${\n        initial +\n        Object.keys(obj.properties).map((key) => {\n          return `\\`${key}\\``;\n        }).join(', ')\n      }$3`);\n\n    await writeFile(docPath, ruleDocs);\n  }\n}\n"],"mappings":"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","ignoreList":[]}