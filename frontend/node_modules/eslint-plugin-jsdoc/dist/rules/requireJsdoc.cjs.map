{"version":3,"file":"requireJsdoc.cjs","names":["_exportParser","_interopRequireDefault","require","_iterateJsdoc","_jsdocUtils","_jsdoccomment","e","__esModule","default","OPTIONS_SCHEMA","additionalProperties","description","properties","checkConstructors","type","checkGetters","anyOf","enum","checkSetters","contexts","items","context","inlineCommentBlock","minLineCount","enableFixer","exemptEmptyConstructors","exemptEmptyFunctions","exemptOverloadedImplementations","fixerMessage","publicOnly","oneOf","ancestorsOnly","cjs","esm","window","ArrowFunctionExpression","ClassDeclaration","ClassExpression","FunctionDeclaration","FunctionExpression","MethodDefinition","skipInterveningOverloadedDeclarations","getMethodOnInterface","interfaceName","methodName","scope","scp","identifiers","name","variables","identifier","interfaceDeclaration","parent","bodyItem","body","methodSig","key","upper","isExemptedImplementer","node","sourceCode","settings","implments","implements","impl","expression","interfaceMethodNode","getScope","comment","getJSDocComment","getOption","baseObject","option","options","getOptions","undefined","baseObj","prop","Object","keys","opt","isFunctionWithOverload","child","functionName","id","idx","indexOf","prevSibling","declaration","_default","exports","create","getSourceCode","getSettings","opts","requireOption","checkJsDoc","info","_handler","some","ctxt","count","underMinLine","getText","match","length","contextMinLineCount","find","ctx","selector","jsDocNode","checkOverloads","exemptSpeciaMethods","inlineTags","problems","source","tags","isFunctionContext","isConstructor","functionParameterNames","getFunctionParameterNames","hasReturnValue","fix","fixer","lines","minLines","maxLines","baseNode","getReducedASTNode","decorator","getDecorator","indent","getIndent","text","loc","start","column","contxt","insertion","repeat","slice","insertTextBefore","report","end","line","messageId","Boolean","initModuleExports","initWindow","exported","exportParser","isUncommentedExport","hasOption","getContextObject","enforcedContexts","includes","value","meta","docs","category","recommended","url","fixable","messages","missingJsDoc","schema","module"],"sources":["../../src/rules/requireJsdoc.js"],"sourcesContent":["import exportParser from '../exportParser.js';\nimport {\n  getSettings,\n} from '../iterateJsdoc.js';\nimport {\n  enforcedContexts,\n  exemptSpeciaMethods,\n  getContextObject,\n  getFunctionParameterNames,\n  getIndent,\n  hasReturnValue,\n  isConstructor,\n} from '../jsdocUtils.js';\nimport {\n  getDecorator,\n  getJSDocComment,\n  getReducedASTNode,\n} from '@es-joy/jsdoccomment';\n\n/**\n * @typedef {{\n *   ancestorsOnly: boolean,\n *   esm: boolean,\n *   initModuleExports: boolean,\n *   initWindow: boolean\n * }} RequireJsdocOpts\n */\n\n/**\n * @typedef {import('eslint').Rule.Node|\n *   import('@typescript-eslint/types').TSESTree.Node} ESLintOrTSNode\n */\n\n/** @type {import('json-schema').JSONSchema4} */\nconst OPTIONS_SCHEMA = {\n  additionalProperties: false,\n  description: 'Has the following optional keys.\\n',\n  properties: {\n    checkConstructors: {\n      default: true,\n      description: `A value indicating whether \\`constructor\\`s should be checked. Defaults to\n\\`true\\`. When \\`true\\`, \\`exemptEmptyConstructors\\` may still avoid reporting when\nno parameters or return values are found.`,\n      type: 'boolean',\n    },\n    checkGetters: {\n      anyOf: [\n        {\n          type: 'boolean',\n        },\n        {\n          enum: [\n            'no-setter',\n          ],\n          type: 'string',\n        },\n      ],\n      default: true,\n      description: `A value indicating whether getters should be checked. Besides setting as a\nboolean, this option can be set to the string \\`\"no-setter\"\\` to indicate that\ngetters should be checked but only when there is no setter. This may be useful\nif one only wishes documentation on one of the two accessors. Defaults to\n\\`false\\`.\n`,\n    },\n    checkSetters: {\n      anyOf: [\n        {\n          type: 'boolean',\n        },\n        {\n          enum: [\n            'no-getter',\n          ],\n          type: 'string',\n        },\n      ],\n      default: true,\n      description: `A value indicating whether setters should be checked. Besides setting as a\nboolean, this option can be set to the string \\`\"no-getter\"\\` to indicate that\nsetters should be checked but only when there is no getter. This may be useful\nif one only wishes documentation on one of the two accessors. Defaults to\n\\`false\\`.`,\n    },\n    contexts: {\n      description: `Set this to an array of strings or objects representing the additional AST\ncontexts where you wish the rule to be applied (e.g., \\`Property\\` for\nproperties). If specified as an object, it should have a \\`context\\` property\nand can have an \\`inlineCommentBlock\\` property which, if set to \\`true\\`, will\nadd an inline \\`/** */\\` instead of the regular, multi-line, indented jsdoc\nblock which will otherwise be added. Defaults to an empty array. Contexts\nmay also have their own \\`minLineCount\\` property which is an integer\nindicating a minimum number of lines expected for a node in order\nfor it to require documentation.\n\nNote that you may need to disable \\`require\\` items (e.g., \\`MethodDefinition\\`)\nif you are specifying a more precise form in \\`contexts\\` (e.g., \\`MethodDefinition:not([accessibility=\"private\"] > FunctionExpression\\`).\n\nSee the [\"AST and Selectors\"](../#advanced-ast-and-selectors)\nsection of our Advanced docs for more on the expected format.`,\n      items: {\n        anyOf: [\n          {\n            type: 'string',\n          },\n          {\n            additionalProperties: false,\n            properties: {\n              context: {\n                type: 'string',\n              },\n              inlineCommentBlock: {\n                type: 'boolean',\n              },\n              minLineCount: {\n                type: 'integer',\n              },\n            },\n            type: 'object',\n          },\n        ],\n      },\n      type: 'array',\n    },\n    enableFixer: {\n      default: true,\n      description: `A boolean on whether to enable the fixer (which adds an empty JSDoc block).\nDefaults to \\`true\\`.`,\n      type: 'boolean',\n    },\n    exemptEmptyConstructors: {\n      default: false,\n      description: `When \\`true\\`, the rule will not report missing JSDoc blocks above constructors\nwith no parameters or return values (this is enabled by default as the class\nname or description should be seen as sufficient to convey intent).\n\nDefaults to \\`true\\`.`,\n      type: 'boolean',\n    },\n    exemptEmptyFunctions: {\n      default: false,\n      description: `When \\`true\\`, the rule will not report missing JSDoc blocks above\nfunctions/methods with no parameters or return values (intended where\nfunction/method names are sufficient for themselves as documentation).\n\nDefaults to \\`false\\`.\n`,\n      type: 'boolean',\n    },\n    exemptOverloadedImplementations: {\n      default: false,\n      description: `If set to \\`true\\` will avoid checking an overloaded function's implementation.\n\nDefaults to \\`false\\`.`,\n      type: 'boolean',\n    },\n    fixerMessage: {\n      default: '',\n      description: `An optional message to add to the inserted JSDoc block. Defaults to the\nempty string.`,\n      type: 'string',\n    },\n    minLineCount: {\n      description: `An integer to indicate a minimum number of lines expected for a node in order\nfor it to require documentation. Defaults to \\`undefined\\`. This option will\napply to any context; see \\`contexts\\` for line counts specific to a context.`,\n      type: 'integer',\n    },\n    publicOnly: {\n      description: `This option will insist that missing JSDoc blocks are only reported for\nfunction bodies / class declarations that are exported from the module.\nMay be a boolean or object. If set to \\`true\\`, the defaults below will be\nused. If unset, JSDoc block reporting will not be limited to exports.\n\nThis object supports the following optional boolean keys (\\`false\\` unless\notherwise noted):\n\n- \\`ancestorsOnly\\` - Optimization to only check node ancestors to check if node is exported\n- \\`esm\\` - ESM exports are checked for JSDoc comments (Defaults to \\`true\\`)\n- \\`cjs\\` - CommonJS exports are checked for JSDoc comments  (Defaults to \\`true\\`)\n- \\`window\\` - Window global exports are checked for JSDoc comments\n`,\n      oneOf: [\n        {\n          default: false,\n          type: 'boolean',\n        },\n        {\n          additionalProperties: false,\n          default: {},\n          properties: {\n            ancestorsOnly: {\n              type: 'boolean',\n            },\n            cjs: {\n              type: 'boolean',\n            },\n            esm: {\n              type: 'boolean',\n            },\n            window: {\n              type: 'boolean',\n            },\n          },\n          type: 'object',\n        },\n      ],\n    },\n    require: {\n      additionalProperties: false,\n      default: {},\n      description: `An object with the following optional boolean keys which all default to\n\\`false\\` except for \\`FunctionDeclaration\\` which defaults to \\`true\\`.`,\n      properties: {\n        ArrowFunctionExpression: {\n          default: false,\n          description: 'Whether to check arrow functions like `() => {}`',\n          type: 'boolean',\n        },\n        ClassDeclaration: {\n          default: false,\n          description: 'Whether to check declarations like `class A {}`',\n          type: 'boolean',\n        },\n        ClassExpression: {\n          default: false,\n          description: 'Whether to check class expressions like `const myClass = class {}`',\n          type: 'boolean',\n        },\n        FunctionDeclaration: {\n          default: true,\n          description: 'Whether to check function declarations like `function a {}`',\n          type: 'boolean',\n        },\n        FunctionExpression: {\n          default: false,\n          description: 'Whether to check function expressions like `const a = function {}`',\n          type: 'boolean',\n        },\n        MethodDefinition: {\n          default: false,\n          description: 'Whether to check method definitions like `class A { someMethodDefinition () {} }`',\n          type: 'boolean',\n        },\n      },\n      type: 'object',\n    },\n    skipInterveningOverloadedDeclarations: {\n      default: true,\n      description: `If \\`true\\`, will skip above uncommented overloaded functions to check\nfor a comment block (e.g., at the top of a set of overloaded functions).\n\nIf \\`false\\`, will force each overloaded function to be checked for a\ncomment block.\n\nDefaults to \\`true\\`.`,\n      type: 'boolean',\n    },\n  },\n  type: 'object',\n};\n\n/**\n * @param {string} interfaceName\n * @param {string} methodName\n * @param {import(\"eslint\").Scope.Scope | null} scope\n * @returns {import('@typescript-eslint/types').TSESTree.TSMethodSignature|null}\n */\nconst getMethodOnInterface = (interfaceName, methodName, scope) => {\n  let scp = scope;\n  while (scp) {\n    for (const {\n      identifiers,\n      name,\n    } of scp.variables) {\n      if (interfaceName !== name) {\n        continue;\n      }\n\n      for (const identifier of identifiers) {\n        const interfaceDeclaration = /** @type {import('@typescript-eslint/types').TSESTree.Identifier & {parent: import('@typescript-eslint/types').TSESTree.TSInterfaceDeclaration}} */ (\n          identifier\n        ).parent;\n        /* c8 ignore next 3 -- TS */\n        if (interfaceDeclaration.type !== 'TSInterfaceDeclaration') {\n          continue;\n        }\n\n        for (const bodyItem of interfaceDeclaration.body.body) {\n          const methodSig = /** @type {import('@typescript-eslint/types').TSESTree.TSMethodSignature} */ (\n            bodyItem\n          );\n          if (methodName === /** @type {import('@typescript-eslint/types').TSESTree.Identifier} */ (\n            methodSig.key\n          ).name) {\n            return methodSig;\n          }\n        }\n      }\n    }\n\n    scp = scp.upper;\n  }\n\n  return null;\n};\n\n/**\n * @param {import('eslint').Rule.Node} node\n * @param {import('eslint').SourceCode} sourceCode\n * @param {import('eslint').Rule.RuleContext} context\n * @param {import('../iterateJsdoc.js').Settings} settings\n */\nconst isExemptedImplementer = (node, sourceCode, context, settings) => {\n  if (node.type === 'FunctionExpression' &&\n    node.parent.type === 'MethodDefinition' &&\n    node.parent.parent.type === 'ClassBody' &&\n    node.parent.parent.parent.type === 'ClassDeclaration' &&\n    'implements' in node.parent.parent.parent\n  ) {\n    const implments = /** @type {import('@typescript-eslint/types').TSESTree.TSClassImplements[]} */ (\n      node.parent.parent.parent.implements\n    );\n\n    const {\n      name: methodName,\n    } = /** @type {import('@typescript-eslint/types').TSESTree.Identifier} */ (\n      node.parent.key\n    );\n\n    for (const impl of implments) {\n      const {\n        name: interfaceName,\n      } = /** @type {import('@typescript-eslint/types').TSESTree.Identifier} */ (\n        impl.expression\n      );\n\n      const interfaceMethodNode = getMethodOnInterface(interfaceName, methodName, node && (\n        (sourceCode.getScope &&\n        /* c8 ignore next 3 */\n        sourceCode.getScope(node)) ||\n        // @ts-expect-error ESLint 8\n        context.getScope()\n      ));\n      if (interfaceMethodNode) {\n        // @ts-expect-error Ok\n        const comment = getJSDocComment(sourceCode, interfaceMethodNode, settings);\n        if (comment) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n};\n\n/**\n * @param {import('eslint').Rule.RuleContext} context\n * @param {import('json-schema').JSONSchema4Object} baseObject\n * @param {string} option\n * @param {string} key\n * @returns {boolean|undefined}\n */\nconst getOption = (context, baseObject, option, key) => {\n  if (context.options[0] && option in context.options[0] &&\n    // Todo: boolean shouldn't be returning property, but\n    //   tests currently require\n    (typeof context.options[0][option] === 'boolean' ||\n    key in context.options[0][option])\n  ) {\n    return context.options[0][option][key];\n  }\n\n  return /** @type {{[key: string]: {default?: boolean|undefined}}} */ (\n    baseObject.properties\n  )[key].default;\n};\n\n/**\n * @param {import('eslint').Rule.RuleContext} context\n * @param {import('../iterateJsdoc.js').Settings} settings\n * @returns {{\n *   contexts: (string|{\n *     context: string,\n *     inlineCommentBlock: boolean,\n *     minLineCount: import('../iterateJsdoc.js').Integer\n *   })[],\n *   enableFixer: boolean,\n *   exemptEmptyConstructors: boolean,\n *   exemptEmptyFunctions: boolean,\n *   skipInterveningOverloadedDeclarations: boolean,\n *   exemptOverloadedImplementations: boolean,\n *   fixerMessage: string,\n *   minLineCount: undefined|import('../iterateJsdoc.js').Integer,\n *   publicOnly: boolean|{[key: string]: boolean|undefined}\n *   require: {[key: string]: boolean|undefined}\n * }}\n */\nconst getOptions = (context, settings) => {\n  const {\n    contexts = settings.contexts || [],\n    enableFixer = true,\n    exemptEmptyConstructors = true,\n    exemptEmptyFunctions = false,\n    exemptOverloadedImplementations = false,\n    fixerMessage = '',\n    minLineCount = undefined,\n    publicOnly,\n    skipInterveningOverloadedDeclarations = true,\n  } = context.options[0] || {};\n\n  return {\n    contexts,\n    enableFixer,\n    exemptEmptyConstructors,\n    exemptEmptyFunctions,\n    exemptOverloadedImplementations,\n    fixerMessage,\n    minLineCount,\n    publicOnly: ((baseObj) => {\n      if (!publicOnly) {\n        return false;\n      }\n\n      /** @type {{[key: string]: boolean|undefined}} */\n      const properties = {};\n      for (const prop of Object.keys(\n        /** @type {import('json-schema').JSONSchema4Object} */ (\n        /** @type {import('json-schema').JSONSchema4Object} */ (\n            baseObj\n          ).properties),\n      )) {\n        const opt = getOption(\n          context,\n          /** @type {import('json-schema').JSONSchema4Object} */ (baseObj),\n          'publicOnly',\n          prop,\n        );\n\n        properties[prop] = opt;\n      }\n\n      return properties;\n    })(\n      /** @type {import('json-schema').JSONSchema4Object} */\n      (\n        /** @type {import('json-schema').JSONSchema4Object} */\n        (\n          /** @type {import('json-schema').JSONSchema4Object} */\n          (\n            OPTIONS_SCHEMA.properties\n          ).publicOnly\n        ).oneOf\n      )[1],\n    ),\n    require: ((baseObj) => {\n      /** @type {{[key: string]: boolean|undefined}} */\n      const properties = {};\n      for (const prop of Object.keys(\n        /** @type {import('json-schema').JSONSchema4Object} */ (\n        /** @type {import('json-schema').JSONSchema4Object} */ (\n            baseObj\n          ).properties),\n      )) {\n        const opt = getOption(\n          context,\n          /** @type {import('json-schema').JSONSchema4Object} */\n          (baseObj),\n          'require',\n          prop,\n        );\n        properties[prop] = opt;\n      }\n\n      return properties;\n    })(\n      /** @type {import('json-schema').JSONSchema4Object} */\n      (OPTIONS_SCHEMA.properties).require,\n    ),\n    skipInterveningOverloadedDeclarations,\n  };\n};\n\n/**\n * @param {ESLintOrTSNode} node\n */\nconst isFunctionWithOverload = (node) => {\n  if (node.type !== 'FunctionDeclaration') {\n    return false;\n  }\n\n  let parent;\n  let child;\n\n  if (node.parent?.type === 'Program') {\n    parent = node.parent;\n    child = node;\n  } else if (node.parent?.type === 'ExportNamedDeclaration' &&\n      node.parent?.parent.type === 'Program') {\n    parent = node.parent?.parent;\n    child = node.parent;\n  }\n\n  if (!child || !parent) {\n    return false;\n  }\n\n  const functionName = node.id.name;\n\n  const idx = parent.body.indexOf(child);\n  const prevSibling = parent.body[idx - 1];\n\n  return (\n    // @ts-expect-error Should be ok\n    (prevSibling?.type === 'TSDeclareFunction' &&\n      // @ts-expect-error Should be ok\n      functionName === prevSibling.id.name) ||\n    (prevSibling?.type === 'ExportNamedDeclaration' &&\n      // @ts-expect-error Should be ok\n      prevSibling.declaration?.type === 'TSDeclareFunction' &&\n      // @ts-expect-error Should be ok\n      prevSibling.declaration?.id?.name === functionName)\n  );\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nexport default {\n  create (context) {\n    /* c8 ignore next -- Fallback to deprecated method */\n    const {\n      sourceCode = context.getSourceCode(),\n    } = context;\n    const settings = getSettings(context);\n    if (!settings) {\n      return {};\n    }\n\n    const opts = getOptions(context, settings);\n\n    const {\n      contexts,\n      enableFixer,\n      exemptEmptyConstructors,\n      exemptEmptyFunctions,\n      exemptOverloadedImplementations,\n      fixerMessage,\n      minLineCount,\n      require: requireOption,\n      skipInterveningOverloadedDeclarations,\n    } = opts;\n\n    const publicOnly =\n\n      /**\n       * @type {{\n       *   [key: string]: boolean | undefined;\n       * }}\n       */ (\n        opts.publicOnly\n      );\n\n    /**\n     * @type {import('../iterateJsdoc.js').CheckJsdoc}\n     */\n    const checkJsDoc = (info, _handler, node) => {\n      if (\n        // Optimize\n        minLineCount !== undefined || contexts.some((ctxt) => {\n          if (typeof ctxt === 'string') {\n            return false;\n          }\n\n          const {\n            minLineCount: count,\n          } = ctxt;\n          return count !== undefined;\n        })\n      ) {\n        /**\n         * @param {undefined|import('../iterateJsdoc.js').Integer} count\n         */\n        const underMinLine = (count) => {\n          return count !== undefined && count >\n            (sourceCode.getText(node).match(/\\n/gv)?.length ?? 0) + 1;\n        };\n\n        if (underMinLine(minLineCount)) {\n          return;\n        }\n\n        const {\n          minLineCount: contextMinLineCount,\n        } =\n          /**\n           * @type {{\n           *   context: string;\n           *   inlineCommentBlock: boolean;\n           *   minLineCount: number;\n           * }}\n           */ (contexts.find((ctxt) => {\n            if (typeof ctxt === 'string') {\n              return false;\n            }\n\n            const {\n              context: ctx,\n            } = ctxt;\n            return ctx === (info.selector || node.type);\n          })) || {};\n        if (underMinLine(contextMinLineCount)) {\n          return;\n        }\n      }\n\n      if (exemptOverloadedImplementations && isFunctionWithOverload(node)) {\n        return;\n      }\n\n      const jsDocNode = getJSDocComment(\n        sourceCode, node, settings, {\n          checkOverloads: skipInterveningOverloadedDeclarations,\n        },\n      );\n\n      if (jsDocNode) {\n        return;\n      }\n\n      // For those who have options configured against ANY constructors (or\n      //  setters or getters) being reported\n      if (exemptSpeciaMethods(\n        {\n          description: '',\n          inlineTags: [],\n          problems: [],\n          source: [],\n          tags: [],\n        },\n        node,\n        context,\n        [\n          OPTIONS_SCHEMA,\n        ],\n      )) {\n        return;\n      }\n\n      if (\n        // Avoid reporting param-less, return-less functions (when\n        //  `exemptEmptyFunctions` option is set)\n        exemptEmptyFunctions && info.isFunctionContext ||\n\n        // Avoid reporting  param-less, return-less constructor methods (when\n        //  `exemptEmptyConstructors` option is set)\n        exemptEmptyConstructors && isConstructor(node)\n      ) {\n        const functionParameterNames = getFunctionParameterNames(node);\n        if (!functionParameterNames.length && !hasReturnValue(node)) {\n          return;\n        }\n      }\n\n      if (isExemptedImplementer(node, sourceCode, context, settings)) {\n        return;\n      }\n\n      const fix = /** @type {import('eslint').Rule.ReportFixer} */ (fixer) => {\n        // Default to one line break if the `minLines`/`maxLines` settings allow\n        const lines = settings.minLines === 0 && settings.maxLines >= 1 ? 1 : settings.minLines;\n        /** @type {ESLintOrTSNode|import('@typescript-eslint/types').TSESTree.Decorator} */\n        let baseNode = getReducedASTNode(node, sourceCode);\n\n        const decorator = getDecorator(\n          /** @type {import('eslint').Rule.Node} */\n          (baseNode),\n        );\n        if (decorator) {\n          baseNode = decorator;\n        }\n\n        const indent = getIndent({\n          text: sourceCode.getText(\n            /** @type {import('eslint').Rule.Node} */ (baseNode),\n            /** @type {import('eslint').AST.SourceLocation} */\n            (\n              /** @type {import('eslint').Rule.Node} */ (baseNode).loc\n            ).start.column,\n          ),\n        });\n\n        const {\n          inlineCommentBlock,\n        } =\n          /**\n           * @type {{\n           *     context: string,\n           *     inlineCommentBlock: boolean,\n           *     minLineCount: import('../iterateJsdoc.js').Integer\n           *   }}\n           */ (contexts.find((contxt) => {\n            if (typeof contxt === 'string') {\n              return false;\n            }\n\n            const {\n              context: ctxt,\n            } = contxt;\n            return ctxt === node.type;\n          })) || {};\n        const insertion = (inlineCommentBlock ?\n          `/** ${fixerMessage}` :\n          `/**\\n${indent}*${fixerMessage}\\n${indent}`) +\n            `*/${'\\n'.repeat(lines)}${indent.slice(0, -1)}`;\n\n        return fixer.insertTextBefore(\n          /** @type {import('eslint').Rule.Node} */\n          (baseNode),\n          insertion,\n        );\n      };\n\n      const report = () => {\n        const {\n          start,\n        } = /** @type {import('eslint').AST.SourceLocation} */ (node.loc);\n        const loc = {\n          end: {\n            column: 0,\n            line: start.line + 1,\n          },\n          start,\n        };\n        context.report({\n          fix: enableFixer ? fix : null,\n          loc,\n          messageId: 'missingJsDoc',\n          node,\n        });\n      };\n\n      if (publicOnly) {\n        /** @type {RequireJsdocOpts} */\n        const opt = {\n          ancestorsOnly: Boolean(publicOnly?.ancestorsOnly ?? false),\n          esm: Boolean(publicOnly?.esm ?? true),\n          initModuleExports: Boolean(publicOnly?.cjs ?? true),\n          initWindow: Boolean(publicOnly?.window ?? false),\n        };\n        const exported = exportParser.isUncommentedExport(node, sourceCode, opt, settings);\n\n        if (exported) {\n          report();\n        }\n      } else {\n        report();\n      }\n    };\n\n    /**\n     * @param {string} prop\n     * @returns {boolean}\n     */\n    const hasOption = (prop) => {\n      return requireOption[prop] || contexts.some((ctxt) => {\n        return typeof ctxt === 'object' ? ctxt.context === prop : ctxt === prop;\n      });\n    };\n\n    return {\n      ...getContextObject(\n        enforcedContexts(context, [], settings),\n        checkJsDoc,\n      ),\n      ArrowFunctionExpression (node) {\n        if (!hasOption('ArrowFunctionExpression')) {\n          return;\n        }\n\n        if (\n          [\n            'AssignmentExpression', 'ExportDefaultDeclaration', 'VariableDeclarator',\n          ].includes(node.parent.type) ||\n          [\n            'ClassProperty', 'ObjectProperty', 'Property', 'PropertyDefinition',\n          ].includes(node.parent.type) &&\n            node ===\n              /**\n               * @type {import('@typescript-eslint/types').TSESTree.Property|\n               *   import('@typescript-eslint/types').TSESTree.PropertyDefinition\n               * }\n               */\n              (node.parent).value\n        ) {\n          checkJsDoc({\n            isFunctionContext: true,\n          }, null, node);\n        }\n      },\n\n      ClassDeclaration (node) {\n        if (!hasOption('ClassDeclaration')) {\n          return;\n        }\n\n        checkJsDoc({\n          isFunctionContext: false,\n        }, null, node);\n      },\n\n      ClassExpression (node) {\n        if (!hasOption('ClassExpression')) {\n          return;\n        }\n\n        checkJsDoc({\n          isFunctionContext: false,\n        }, null, node);\n      },\n\n      FunctionDeclaration (node) {\n        if (!hasOption('FunctionDeclaration')) {\n          return;\n        }\n\n        checkJsDoc({\n          isFunctionContext: true,\n        }, null, node);\n      },\n\n      FunctionExpression (node) {\n        if (!hasOption('FunctionExpression')) {\n          return;\n        }\n\n        if (\n          [\n            'AssignmentExpression', 'ExportDefaultDeclaration', 'VariableDeclarator',\n          ].includes(node.parent.type) ||\n          [\n            'ClassProperty', 'ObjectProperty', 'Property', 'PropertyDefinition',\n          ].includes(node.parent.type) &&\n            node ===\n              /**\n               * @type {import('@typescript-eslint/types').TSESTree.Property|\n               *   import('@typescript-eslint/types').TSESTree.PropertyDefinition\n               * }\n               */\n              (node.parent).value\n        ) {\n          checkJsDoc({\n            isFunctionContext: true,\n          }, null, node);\n        }\n      },\n\n      MethodDefinition (node) {\n        if (!hasOption('MethodDefinition')) {\n          return;\n        }\n\n        checkJsDoc({\n          isFunctionContext: true,\n          selector: 'MethodDefinition',\n        }, null, /** @type {import('eslint').Rule.Node} */ (node.value));\n      },\n    };\n  },\n  meta: {\n    docs: {\n      category: 'Stylistic Issues',\n      description: 'Checks for presence of JSDoc comments, on functions and potentially other contexts (optionally limited to exports).',\n      recommended: true,\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-jsdoc.md#repos-sticky-header',\n    },\n\n    fixable: 'code',\n\n    messages: {\n      missingJsDoc: 'Missing JSDoc comment.',\n    },\n\n    schema: [\n      OPTIONS_SCHEMA,\n    ],\n\n    type: 'suggestion',\n  },\n};\n"],"mappings":"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","ignoreList":[]}